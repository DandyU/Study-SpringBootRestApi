buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter() // For restdocs
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2')
    }

}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.asciidoctor.convert'

asciidoctor {
    attributes 'snippets': file('build/generated-snippets')
    outputDir "${buildDir}/asciidoc"
    options doctype: 'book'
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

group = 'me.wired'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-hateoas')
    implementation('org.springframework.boot:spring-boot-starter-web')
    runtimeOnly('org.postgresql:postgresql')
    //runtimeOnly('com.h2database:h2')
    //compileOnly('org.postgresql:postgresql')

    compile('org.modelmapper:modelmapper:2.3.2')
    compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.1.RELEASE')
    compileOnly('org.projectlombok:lombok')
    compileOnly ('org.springframework.boot:spring-boot-configuration-processor')
    testCompile('pl.pragmatists:JUnitParams:1.1.1')
    testCompile('org.springframework.security:spring-security-test')
    testRuntimeOnly('com.h2database:h2')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
    asciidoctor('org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.3.RELEASE')
}
